#!/usr/bin/python3

import sys
if sys.version_info[0] < 3:
    raise Exception("The version of Python must be 3 or greater.")

import argparse
import gst_conan
import os

if '__main__' == __name__:
    scriptName = os.path.basename(__file__)

    # ----------------------
    # The main parser contains a sub-parser for each verb.
    # ----------------------
    mainParser = argparse.ArgumentParser(description=scriptName + ":  Conan support for gstreamer.",
                                         formatter_class=argparse.RawTextHelpFormatter)
    verbParsers = mainParser.add_subparsers(title="verbs", dest="verb")

    #----------------------
    # verb = create
    # ----------------------
    createParser = verbParsers.add_parser("create", description=\
        "Runs `conan create` on all projects (in the correct order).  "
        "You can append extra arguments to the end of this command, and they will be"
        "attached to the end of all `conan create` commands.")
    createParser.add_argument("--rev", dest="rev", required=False, default="master",
                              help="The revision of the gst-build.  This can be a sha, branch, or tag name.")
    createParser.add_argument("--version", dest="version", required=True,
                              help="The version of the conan artifacts.")
    createParser.add_argument("--build_type", dest="build_type", default="Debug",
                              choices = gst_conan.build.conanBuildTypes(),
                              help="This sets the conan `build_type` setting.")
    createParser.add_argument("--user", dest="user", required=True,
                              help="The conan user, part of the `$user/$channel` expression.")
    createParser.add_argument("--channel", dest="channel", required=True,
                              help="The conan user's channel, part of the `$user/$channel` expression.")

    # ----------------------
    # verb = setup
    # ----------------------
    setupParser = verbParsers.add_parser("setup", description= \
        "Sets up the build machine (installs various packages).  Must be run with root privileges.")

    # ----------------------
    # verb = copy_gst_conanfile
    # ----------------------
    copyParser = verbParsers.add_parser("copy_gst_conanfile", description= \
        "DEPRECATED:  This is a temporary bug workaround (see https://github.com/conan-io/conan/issues/3591).  "
        "This command copies the 'packages/gstreamer/gst_conanfile' folder into all the other conan packages.")

    # ----------------------
    # Wire up implementation
    # ----------------------
    thisFolder = os.path.dirname(os.path.realpath(__file__))
    packagesFolder = os.path.join(thisFolder, "packages")

    args, extraArgs = mainParser.parse_known_args()

    if args.verb == "copy_gst_conanfile":
        gst_conan.commands.copy_gst_conanfile()
    elif args.verb == "create":
        gst_conan.commands.create(packagesFolder, args.rev, args.version, args.build_type, args.user, args.channel, extraArgs)
    elif args.verb == "setup":
        gst_conan.commands.setup()
    else:
        raise Exception("Unrecognized verb:  " + args.verb)